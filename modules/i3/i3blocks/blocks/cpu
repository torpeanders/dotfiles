#! /usr/bin/perl -CASDL

use strict;
use utf8;

use POSIX;
use File::Glob ':bsd_glob';
use Getopt::Long qw(GetOptionsFromString);

use Data::Dumper;
$Data::Dumper::Sortkeys = $Data::Dumper::Indent = 1;

my $opt_background_color = "#333333";
my $opt_show_pct = 0;

GetOptionsFromString($ENV{BLOCK_INSTANCE},
		     "bg|background|bgcolor=s" => \$opt_background_color,
		     "pct" => \$opt_show_pct,
		    );

# remember to flush!
$| = 1;

my @cpu_stat;

open STAT, "/proc/stat";
while (<STAT>) {
    if (/^cpu(\d+)\s+(.*)/) {
	push @{$cpu_stat[$1]}, [ split " ", $2 ];
    }
}
close STAT;

my %json = (# color => $opt_color,
	    # urgent => "true",
	    markup => "pango",
	   );

while (1) {
    sleep 1;
    open STAT, "/proc/stat";
    while (<STAT>) {
	if (/^cpu(\d+)\s+(.*)/) {
	    push @{$cpu_stat[$1]}, [ split " ", $2 ];
	}
    }
    $json{full_text} = "\x{e266}";
    my($t_sum,$t_idle);
    for my $cpu (@cpu_stat) {
	# user nice system idle iowait irq softirq steal guest guest_nice
	shift @$cpu while @$cpu > 11;
	my $sum = 0;
	$sum += $_ for @{$cpu->[-1]};
	$sum -= $_ for @{$cpu->[0]};
	$t_sum += $sum;
	$t_idle += $cpu->[-1][3] - $cpu->[0][3];

	my $pct = $sum ? 100 - ($cpu->[-1][3]-$cpu->[0][3])*100/$sum : 0;

	$json{full_text} .=
	  sprintf(qq{ <span color='%s' background='%s'>%s</span>},
		  ramp($pct, qw{ #00ff00 #a8ff00 #fff600 #ffae00 #ff0000 }),
		  $opt_background_color,
		  ramp($pct,
		       " ",
		       map { chr } 0x2581 .. 0x2588,
		      ),
		 );
    }
    $json{short_text} = $json{full_text};
    if ($opt_show_pct) {
	$json{full_text} .= sprintf " %5.2f%%", $t_sum ? 100 - $t_idle/$t_sum*100 : 0;
    }
    printf "%s\n", json(%json);
}

exit 0;

sub json {
    my(%json) = @_;
    for (values %json) {
	s/"/\\"/g;
	s/\n/\\n/g;
	$_ = qq{"$_"} if /\D/;
    }
    return "{".join(",",map {qq{"$_":$json{$_}}} sort keys %json)."}";
}

sub ramp {
    my($pct,@ramp) = @_;
    return $ramp[0] unless @ramp > 1;
    my($block_size) = 100/$#ramp;
    $pct += $block_size/2;
    $ramp[$pct/$block_size];
}
